name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_VERSION: 22

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # Needed for SARIF upload in private repos
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint and Prettier
        run: |
          hasError=false

          echo "Running ESLint..."
          pnpm lint || { hasError=true; }

          echo "Running Prettier..."
          pnpm prettier || { hasError=true; }

          if [ "$hasError" = true ]; then
            echo "Lint failed. Please fix the errors.";
            echo "Try running 'pnpm lint:fix'";
            exit 1;
          fi

        continue-on-error: false

      ## Requires GitHub Advanced Security to be enabled
      ## https://github.com/enterprise/advanced-security#pricing
      ## Make sure to format ESLint report as SARIF
      # - name: Upload analysis results to GitHub
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: eslint-results.sarif
      #     wait-for-processing: true

  build:
    name: Validate Build
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      PAYLOAD_SECRET: payloadsecret
      PAYLOAD_ADMIN_EMAIL: admin@example.com
      PAYLOAD_ADMIN_PASSWORD: admin
      DATABASE_URI: mongodb://admin:admin@localhost:27017/da-minh-go-vap?authSource=admin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate Payload types
        run: pnpm generate

      - name: Build
        run: pnpm build
