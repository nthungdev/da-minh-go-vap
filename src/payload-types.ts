/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    posts: Post;
    hiddenTags: HiddenTag;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    hiddenTags: HiddenTagsSelect<false> | HiddenTagsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    navBar: NavBar;
    asideSection: AsideSection;
    footer: Footer;
    siteSettings: SiteSetting;
  };
  globalsSelect: {
    navBar: NavBarSelect<false> | NavBarSelect<true>;
    asideSection: AsideSectionSelect<false> | AsideSectionSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    siteSettings: SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    'thumbnail-square'?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    'thumbnail-square-mobile'?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  publishedAt: string;
  hiddenTags?: (string | HiddenTag)[] | null;
  thumbnail?: (string | null) | Media;
  videos?:
    | {
        title: string;
        type?: ('youtube' | 'facebook') | null;
        url: string;
        id?: string | null;
      }[]
    | null;
  body: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hiddenTags".
 */
export interface HiddenTag {
  id: string;
  label: string;
  tag: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  publishedAt: string;
  thumbnail?: (string | null) | Media;
  content?:
    | (
        | {
            content: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            hiddenTags: (string | HiddenTag)[];
            viewMoreButton: {
              enableViewMoreButton: boolean;
              relativeUrl?: (string | null) | Post;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'postGroupBlock';
          }
        | {
            tabs: {
              title: string;
              content: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'tabbedContentBlock';
          }
        | {
            videos: {
              title: string;
              type: 'youtube' | 'facebook';
              url: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoGridBlock';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'hiddenTags';
        value: string | HiddenTag;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        'thumbnail-square'?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        'thumbnail-square-mobile'?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  publishedAt?: T;
  hiddenTags?: T;
  thumbnail?: T;
  videos?:
    | T
    | {
        title?: T;
        type?: T;
        url?: T;
        id?: T;
      };
  body?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hiddenTags_select".
 */
export interface HiddenTagsSelect<T extends boolean = true> {
  label?: T;
  tag?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  publishedAt?: T;
  thumbnail?: T;
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        postGroupBlock?:
          | T
          | {
              title?: T;
              hiddenTags?: T;
              viewMoreButton?:
                | T
                | {
                    enableViewMoreButton?: T;
                    relativeUrl?: T;
                  };
              id?: T;
              blockName?: T;
            };
        tabbedContentBlock?:
          | T
          | {
              tabs?:
                | T
                | {
                    title?: T;
                    content?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        videoGridBlock?:
          | T
          | {
              videos?:
                | T
                | {
                    title?: T;
                    type?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navBar".
 */
export interface NavBar {
  id: string;
  bottomDecorativeGraphic?: {
    enable?: boolean | null;
    imageDesktop?: (string | null) | Media;
    imageMobile?: (string | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asideSection".
 */
export interface AsideSection {
  id: string;
  slideshow?: {
    enable?: boolean | null;
    slides?: (string | null) | Media;
  };
  postGroups?: {
    enable?: boolean | null;
    groups?:
      | {
          title: string;
          limit?: number | null;
          hiddenTags?: (string | HiddenTag)[] | null;
          id?: string | null;
        }[]
      | null;
  };
  curatedPosts: {
    enable?: boolean | null;
    title: string;
    posts?:
      | {
          post?: (string | null) | Post;
          id?: string | null;
        }[]
      | null;
  };
  links: {
    enable?: boolean | null;
    title: string;
    links?:
      | {
          url: string;
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  topFooterDecorativeGraphic?: (string | null) | Media;
  contact?: {
    name?: string | null;
    address?: string | null;
    phone?: string | null;
    email?: string | null;
    marketingEmail?: string | null;
  };
  externalLinks?:
    | {
        name: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings".
 */
export interface SiteSetting {
  id: string;
  logo?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navBar_select".
 */
export interface NavBarSelect<T extends boolean = true> {
  bottomDecorativeGraphic?:
    | T
    | {
        enable?: T;
        imageDesktop?: T;
        imageMobile?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asideSection_select".
 */
export interface AsideSectionSelect<T extends boolean = true> {
  slideshow?:
    | T
    | {
        enable?: T;
        slides?: T;
      };
  postGroups?:
    | T
    | {
        enable?: T;
        groups?:
          | T
          | {
              title?: T;
              limit?: T;
              hiddenTags?: T;
              id?: T;
            };
      };
  curatedPosts?:
    | T
    | {
        enable?: T;
        title?: T;
        posts?:
          | T
          | {
              post?: T;
              id?: T;
            };
      };
  links?:
    | T
    | {
        enable?: T;
        title?: T;
        links?:
          | T
          | {
              url?: T;
              image?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  topFooterDecorativeGraphic?: T;
  contact?:
    | T
    | {
        name?: T;
        address?: T;
        phone?: T;
        email?: T;
        marketingEmail?: T;
      };
  externalLinks?:
    | T
    | {
        name?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}