name: daminhgovap-production
services:
  webapp:
    build:
      context: ../../
      dockerfile: docker/production/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ${MEDIA_PATH}:/app/media
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - ../../.env.production

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    command:
      - --storageEngine=wiredTiger
    volumes:
      - data:/data/mongo
    # turn off logging to save disk storage
    logging:
      driver: none
    env_file:
      - ../../.env.production
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'echo ''db.runCommand("ping").ok'' | mongosh "mongodb://$${MONGO_INITDB_ROOT_USERNAME}:$${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/$${DATABASE_NAME}?authSource=admin" --quiet',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ../../certbot/www:/var/www/certbot/:ro
      - ../../certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - webapp

  certbot:
    restart: always
    image: certbot/certbot:latest
    volumes:
      - ../../certbot/www/:/var/www/certbot/:rw
      - ../../certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'while :; do certbot renew; sleep 12h; done'"

volumes:
  data:
    name: daminhgovap-data-production
